Results of Task1:
baby 6 and worms 3
=== Final Results ===
Baby 1: 2 worms
Baby 2: 3 worms
Baby 3: 3 worms
Baby 4: 2 worms
Baby 5: 3 worms
Baby 6: 2 worms


baby 3 and worms 5
=== Final Results ===
Baby 1: 9 worms
Baby 2: 7 worms
Baby 3: 9 worms

Analys:
Fairness Mechanism:
 – The parent thread refills the dish exactly W times per iteration, and once the dish is empty the parent wakes up.
 – Each baby bird increases its own count in a mutex‐protected critical section.
 – Because all baby birds must compete for the same dish semaphore (which limits access to the available worms), 
   they have an equal opportunity to get a worm.
 – The solution is fair in the sense that every bee gets a chance to add a worm whenever one is available. 
   There is no fixed priority or bias favoring one bee over another.
 – The slight imbalance observed in each individual run is a consequence of the inherent nondeterminism of thread 
   scheduling and the timing of when each bee accesses the dish. This is acceptable in many simulations unless strict
   round-robin or equal contribution per iteration is required.



Results of Task2:  
honeybee 5 and portions 2
=== Final Results ===
Honeybee 1: 2 portions
Honeybee 2: 1 portions
Honeybee 3: 1 portions
Honeybee 4: 3 portions
Honeybee 5: 3 portions

honeybee 3 and portions 4
=== Final Results ===
Honeybee 1: 7 portions
Honeybee 2: 7 portions
Honeybee 3: 6 portions

Analys:
The solution uses a mutex to ensure that only one honeybee adds honey at a time,
and it records each bee’s contribution per refill cycle. Each bee sleeps for a 
random 1–2 seconds before trying to add honey, so every bee gets an equal chance 
to access the pot. When the pot becomes full, the bear is notified, prints each 
bee’s contribution for that iteration, and empties the pot.

Because the bees’ sleep times are random, some iterations may show slight imbalances
(for example, one bee may add one more portion than another in a given cycle). 
However, over multiple iterations these differences should average out if the random
delays are uniformly distributed.

In summary, the solution is fair in that it gives every honeybee an equal opportunity 
to add honey and records each bee’s contributions. The variability seen in the printed 
results is due to inherent randomness, not a bias in the scheduling or the mechanism.